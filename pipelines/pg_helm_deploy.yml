variables:
  - group: devops-dev
  - group: pg-dev
  - group: infra

pool: ipam-devops

trigger:
  batch: true
  branches:
    include:
      - master
      - main
  paths:
    include:
      - pipelines/pg_helm_deploy.yml
      - helm/postgres/**/*

resources:
  pipelines:
    - pipeline: drivers_deploy
      source: leriksen.secrets_config
      trigger:
        branches:
          - master
          - main

stages:
  - stage: deploy_helm
    displayName: Deploy Helm
    jobs:
      - deployment: helm
        displayName: Deploy Helm
        workspace:
          clean: all
        environment: $(environment)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - task: HelmInstaller@1

                - task: HelmDeploy@0
                  displayName: Helm Package
                  inputs:
                    command: package
                    chartPath: helm/postgres
                    chartVersion: 0.1.0
                    destination: $(Build.ArtifactStagingDirectory)
                    arguments: --app-version $(Build.BuildNumber)
                    save: false

                - task: PublishPipelineArtifact@1
                  displayName: Save helm package
                  inputs:
                    targetPath: $(Build.ArtifactStagingDirectory)/postgres-0.1.0.tgz
                    artifact: helm_postgres_package
                    publishLocation: pipeline

                - task: HelmDeploy@0
                  displayName: Helm Deploy
                  inputs:
                    namespace:                   $(environment)
                    connectionType:              Kubernetes Service Connection
                    kubernetesServiceConnection: tf_sc_aks
                    command:                     upgrade
                    chartType:                   FilePath
                    chartPath:                   $(Build.ArtifactStagingDirectory)/postgres-0.1.0.tgz
                    chartVersion:                0.1.0
                    releaseName:                 postgres
                    valueFile:                   helm/postgres/values.yaml
                    arguments:                   --install --create-namespace --timeout 30s
                    overrideValues:              pguser=$(pguser),pgpassword=$(pgpassword),pghost=$(pghost)

                - bash: |
                    pw=$(kubectl exec postgres-cli -n dev -- cat /mnt/secrets-store/pgpassword)

                    if [[ "${pw}" == "$(pgpassword)" ]]; then
                      echo correct
                      exit 0
                    else
                      echo incorrect
                      exit 1
                    fi
                  displayName: Confirm mounted