parameters:
  - name: tf_creds

stages:
  - stage: terraform_plan
    displayName: Terraform Plan
    jobs:
      - job: terraform_plan
        displayName: Terraform Plan
        workspace:
          clean: all
        steps:
          - task: DownloadSecureFile@1
            name: tf_creds
            inputs:
              secureFile: ${{ parameters.tf_creds }}
          - bash: |
              echo $(tf_creds.secureFilePath)

#          - task: CopyFiles@2
#            inputs:
#              sourceFolder: $(tf_creds.secureFilePath)
#              contents: "credentials.tfrc.json"
#              targetFolder: "~/.terraform.d"

#          - task: Bash@3
#            displayName: terraform init
#            inputs:
#              azureSubscription: ${{ parameters.service_connection }}
#              scriptType: bash
#              scriptLocation: inlineScript
#              inlineScript: |
#                terraform init
#              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
#                -backend-config="key=${{ parameters.project }}-${{ parameters.environment }}.tfstate"
#            env:
#              TF_IN_AUTOMATION: true
#
#
#          - task: AzureCLI@2
#            displayName: terraform plan
#            name: plan # needed for result later
#            inputs:
#              azureSubscription: ${{ parameters.service_connection }}
#              scriptType: bash
#              scriptLocation: scriptPath
#              scriptPath: scripts/terraform_plan.sh
#              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
#              addSpnToEnvironment: true
#              arguments: >
#                -out tfplan.tfout
#                -var "env=${{ parameters.environment }}"
#                -var "id_file=$(idfile.secureFilePath)"
#            env:
#              TF_IN_AUTOMATION: true
#              ARM_SUBSCRIPTION_ID: ${{ parameters.subscription_id }}
#              ARM_USE_AZUREAD: true
#
#          - task: CopyFiles@2
#            displayName: stage files to $(Build.StagingDirectory)
#            condition: and(succeeded(), eq(variables['plan.result'], 'changed'))
#            inputs:
#              sourceFolder: $(System.DefaultWorkingDirectory)
#              contents: |
#                terraform/**/*
#                modules/**/*
#                !scripts/**/*
#                !pipelines/**/*
#                !.gitignore
#                !**/.git/**/*
#                !terraform/.terraform/**/*
#              targetFolder: $(Build.StagingDirectory)
#              cleanTargetFolder: true
#
#          - task: PublishBuildArtifacts@1
#            displayName: upload tf artifact
#            condition: and(succeeded(), eq(variables['plan.result'], 'changed'))
#            inputs:
#              artifactName: terraform-plan
