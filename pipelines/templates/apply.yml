parameters:
  - name: tf_creds
  - name: tf_workspace
  - name: environment

stages:
  - stage: terraform_apply
    displayName: Terraform Apply
    # note the syntax for conditions is different to setting variables
    # https://learn.microsoft.com/en-us/azure/devops/pipelines/process/deployment-jobs?view=azure-devops
    condition: and(succeeded(), eq(dependencies.terraform_plan.outputs['terraform_plan.plan.result'], 'changed'))
    jobs:
      - deployment: terraform_apply
        displayName: Terraform Apply
        workspace:
          clean: all
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadSecureFile@1
                  name: tf_creds
                  inputs:
                    secureFile: ${{ parameters.tf_creds }}

                - bash: |
                    mkdir -p ~/.terraform.d
                  displayName: Setup Creds Dest

                - task: CopyFiles@2
                  inputs:
                    sourceFolder: $(Agent.TempDirectory)
                    contents: ${{ parameters.tf_creds }}
                    targetFolder: "~/.terraform.d"

                - task: Bash@3
                  displayName: terraform init
                  inputs:
                    targetType: filePath
                    filePath: $(Agent.BuildDirectory)/terraform-plan/scripts/terraform_init.sh
                    workingDirectory: $(Agent.BuildDirectory)/terraform-plan/terraform
                  env:
                    TF_IN_AUTOMATION: true
                    TF_WORKSPACE: ${{ parameters.tf_workspace }}

                - task: Bash@3
                  displayName: terraform apply
                  inputs:
                    targetType: filePath
                    filePath: $(Agent.BuildDirectory)/terraform-plan/scripts/terraform_apply.sh
                    workingDirectory: $(Agent.BuildDirectory)/terraform-plan//terraform
                  env:
                    TF_IN_AUTOMATION: true
                    TF_WORKSPACE: ${{ parameters.tf_workspace }}
